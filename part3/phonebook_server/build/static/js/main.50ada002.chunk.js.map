{"version":3,"sources":["CreateForm.jsx","services/persons.js","Notification.jsx","index.js"],"names":["CreateForm","onSubmit","useState","newEntry","setNewEntry","handleSubmit","event","preventDefault","handleChange","target","name","value","e","onChange","type","baseUrl","axios","get","then","response","data","newPerson","post","id","updatedPerson","put","delete","Notification","message","className","PhoneNumbers","filter","entries","onRemovePerson","filtered","entry","toLowerCase","includes","map","index","number","onRemove","PhoneNumber","onClick","Filter","onUpdateFilter","App","persons","setPersons","errorMessage","setErrorMessage","React","useEffect","personsService","setFilter","setMessage","setTimeout","validateDuplicate","person","length","console","log","res","concat","catch","error","window","confirm","_id","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.50ada002.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst CreateForm = ({ onSubmit }) => {\r\n  const [ newEntry, setNewEntry ] = useState({\r\n  });\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    onSubmit(newEntry);\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    setNewEntry({ ...newEntry, [event.target.name]: event.target.value });\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={e => handleSubmit(e)}>\r\n        <div>\r\n          <label>\r\n            name: \r\n          </label>\r\n          <input name=\"name\" onChange={handleChange} />\r\n          <label>\r\n            number: \r\n          </label>\r\n          <input name=\"number\" onChange={handleChange} />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n  )\r\n}\r\n\r\nexport default CreateForm;","import axios from 'axios'\r\n\r\nconst baseUrl = 'api/persons';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = (newPerson) => {\r\n  const request = axios.post(baseUrl, newPerson);\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, updatedPerson) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, updatedPerson);\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n  return axios.delete(`${baseUrl}/${id}`);\r\n}\r\n\r\nexport default { getAll, create, update, remove }","import React from 'react'\r\nimport './notification.css';\r\n\r\nconst Notification = ({ message }) => {\r\n  return (\r\n    message ? \r\n      <div className=\"error\">\r\n      {message}\r\n      </div> : null\r\n  )\r\n}\r\n\r\nexport default Notification;","import React, { useState } from 'react'\nimport ReactDOM from 'react-dom';\nimport CreateForm from './CreateForm';\nimport personsService from './services/persons';\nimport Notification from './Notification';\n\nconst PhoneNumbers = ({ filter, entries, onRemovePerson }) => {\n  let filtered = entries.filter(entry => entry.name.toLowerCase().includes(filter.toLowerCase()))\n\n  return (\n    <>\n      { filtered.map((entry, index) => {\n        return (\n          <PhoneNumber id={entry.id} name={entry.name} number={entry.number} onRemove={() => onRemovePerson(entry.id)}/>\n        ) \n      })}\n    </>\n  )\n}\n\nconst PhoneNumber = ({ name, number, onRemove }) => {\n  return (\n    <>\n      <h5>{name}</h5>\n      <h5>{number}</h5>\n      <button onClick={onRemove}>Delete</button>\n    </>\n  )\n}\n\nconst Filter = ({ onUpdateFilter }) => {\n  return (\n    <>\n      <label>Filter By Name</label>      \n      <input type=\"text\" onChange={onUpdateFilter}/>\n    </>\n  )\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  React.useEffect(() => {\n    personsService.getAll().then( response => {\n      setPersons(response)\n    })\n  }, []);\n\n  const [ filter, setFilter ] = useState('');\n  const updateFilter = (event) => {\n    setFilter(event.target.value);\n  }\n  const addPerson = (newPerson) => {\n    console.log(newPerson)\n    if (validateDuplicate(newPerson.name)) {\n      console.log(\"name is valid\")\n      personsService.create(newPerson)\n      .then( res => {\n        setPersons(persons.concat({ name: newPerson.name, number: newPerson.number }))\n        setMessage(`Added ${res.name}`)\n      }).catch(error => {\n        setMessage(error.response.data.error );\n        console.log(error.response.data);\n      })\n    } else {\n      if(window.confirm(`${newPerson.name} already exist in the phonebook, would you like to replace the old one?`)) {\n        personsService.update(persons.filter(person => newPerson.name === person.name)[0]._id, newPerson)\n        .then(\n          setMessage(`Updated ${newPerson.name}`)\n        )\n        setPersons(persons.map(person => person.name === newPerson.name ? newPerson : person))  \n      }\n    }\n  }\n\n  const setMessage = (message) => {\n    setErrorMessage(message)\n    setTimeout(() => {\n      setErrorMessage(null)\n    }, 5000)\n  }\n\n  const removePerson = (id) => {\n      if(window.confirm()){\n        personsService.remove(id)\n        .then(() => {\n          setPersons(persons.filter(person => person.id !== id ));\n        })\n        .catch(error => {\n          setErrorMessage(\"Message cannot be deleted\");\n        });\n      }\n    }\n\n  const validateDuplicate = (name) => {\n    const duplicates = persons.filter( person => {\n      return (\n        person.name === name\n      ) \n    });\n        \n    return duplicates.length < 1;\n  }\n\n  return (\n    <div>\n      <Filter onUpdateFilter={updateFilter} />\n      <Notification message={errorMessage} /> \n      <h2>Phonebook</h2>\n      <CreateForm onSubmit={addPerson} />\n      <h2>Numbers</h2>\n      <PhoneNumbers filter={filter} onRemovePerson={removePerson} entries={persons} />\n    </div>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}